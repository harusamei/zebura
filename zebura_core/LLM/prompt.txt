# 存放任务指令模板，格式为：<TASK: xxx> ... </TASK>
# ignore #开头的行

<TASK: rewrite>
# 将多轮对话，重写为一条查询语句
During a conversation, when a user asks data-related questions and the agent should provide the corresponding data analysis based on the user's intent. If the requested data cannot be located, the agent will prompt the user for more specific details.
When rewriting the user's follow-up message into a detailed, standalone data-related question, ensure the following:
1. Maintain the original intent of the follow-up message.
2. Phrase the conversation directly as a data-related question with the user seeking answers, not the agent seeking clarification.
3. Incorporate relevant specifics about tables, fields, and query conditions previously discussed in the conversation, to supplement any missing data details in the user's original query.
4. If the original message is casual or unclear in intent, retain the original sentence without modification.
5. Keep the length of the rewritten question similar to the original to preserve its intent.
6. Focus on referencing the details from the user's historical questions rather than the agent's responses when constructing the query.

Examples of Refined Standalone Question:
1. Find all customers located in Germany
2. Get all product details and sort them by name
3. Retrieve the first 5 customers who registered in 2021

Conversation History (Sorted by request time from most recent to oldest):
{history_context}

Follow Up Input: 
user: {query}

**NOTE**: DO NOT prompt the user for additional specific information.
Refined Standalone Question:
</TASK>

<TASK: nl2sql_classic>
You are a programming assistant, and your task is to convert user’s natural language questions into executable SQL queries. 
Given the database schema structures, including table names, column names and their data types, and the relationships between tables (foreign keys), for the following user input question, you need to:
1. Language Parsing:
- Extract key entities, such as table names and column names, from the input question.
- Identify SQL keywords and clauses required to construct the query (e.g., SELECT, WHERE, JOIN, ORDER BY).
2. Convert to a Valid SQL Statement: 
- Convert parsed components into a valid SQL statement.
- Ensure correct syntax and logical order of SQL clauses.
3. Handle edge cases or bad cases:
- Handle edge cases, such as ambiguous or incomplete questions, by providing the best possible SQL guess or requesting clarification.
- Output NOSQL and suggestions for improving the input question if it cannot be directly converted into SQL.

Examples of two output formats:
1. 
   ```sql
   SELECT brand, COUNT(DISTINCT product_cate1) AS category_count
   FROM products
   GROUP BY brand;
   ```
2. 
 NOSQL, To provide you with the average price of laptops, I would need more specific criteria or filters to narrow down the selection of laptops. 

Database schema structures:
{dbSchema}

</TASK>

<TASK: term_expansion>
# 术语扩展
Given the following keywords, generate a set of vocabulary expansions for each keyword including synonyms, related terms, spelling variants, conceptual expansion and translation (If the original word is in Chinese, translate it into English; if it is in English, translate it into Chinese). 
Ensure to provide a diverse set of expansions to enrich the vocabulary.
Examples of output
[Innovation] 
- Synonym Expansion: Creativity OR Originality OR Novelty OR Ingenuity 
- Related Terms Expansion: Invention OR Breakthrough OR Disruption OR Modernization OR Revolution 
- Spelling Variants: Innovación (Spanish) OR Innovation (French) OR Innovazione (Italian)
- Conceptual Expansion: Technological Advancements OR Process Improvements OR Creative Solutions OR Business Transformation
- Translation: 创新
[Technology]
- Synonym Expansion: Tech OR Engineering OR Applied Science OR High-tech
- Related Terms Expansion: Gadgets OR Devices OR Digital Tools OR Software OR Hardware
- Spelling Variants: Technologie (German) OR Tecnología (Spanish) OR Tecnologia (Italian)
- Conceptual Expansion: Digital Transformation OR Innovation Enablers OR Modern Systems OR Computational Advancements
- Translation: 技术
Please generate expansions for each keyword following the format above.
</TASK>

# 根据db schema生成查询DB的自然语言问题
<TASK: db2nl>
You are provided with a detailed schema of a relational database. This schema includes the names of tables, their columns, data types, and relationships between tables (foreign keys). Your task is to generate various natural language questions that could be asked to query information from this database. The questions should cover a wide range of query types, including but not limited to data retrieval, aggregations, updates, and joins.

Instructions:

Carefully read the provided database schema to understand the structure and relationships between tables.
Generate a set of natural language questions based on the schema. Aim for diversity in the types of questions, including:
Simple retrieval questions
Aggregation and summary questions
Update or modification questions
Questions involving joins across multiple tables
Conditional retrieval questions
Ensure the questions are clear and unambiguous, reflecting typical queries a user might ask to interact with this database.

For each of the above natural language questions in Chinese, convert them into corresponding SQL queries

Example Database Schema:

Input: 
database schema:

1. Customers
CustomerID
Name 
Email 
PhoneNumber 

2. Orders
OrderID
OrderDate 
CustomerID 
TotalAmount 

3. Products
ProductID 
ProductName 
Price 

4. OrderDetails
OrderDetailID
OrderID
ProductID
Quantity
Subtotal

Output:  
Natural Language Question: 找到所有客户的名称和电子邮件地址。
SQL Query:
SELECT Name, Email
FROM Customers;

Natural Language Question: 找出在2024年5月下订单的客户ID和订单ID。
SQL Query:
SELECT CustomerID, OrderID
FROM Orders
WHERE OrderDate BETWEEN '2024-05-01' AND '2024-05-31';

Natural Language Question: 获取所有订单的总金额大于1000的订单ID和总金额。
SQL Query:
SELECT OrderID, TotalAmount
FROM Orders
WHERE TotalAmount > 1000;

Now, generate a comprehensive list of natural language questions and SQL queries based on the provided db schema.
Note, natural language questions must be related to the database schema, and the fields of the SQL query must be within the database schema.
</TASK>

<TASK: db2sql>
You will be provided with a database schema. Your task is to generate a diverse set of SQL queries based on the given schema. 
Ensure that the generated queries involve different tables and fields from the schema, and include various SQL operations (e.g., SELECT, INSERT, UPDATE, DELETE, etc.). 
Provide detailed queries and make each query unique and meaningful. 

Please generate the following types of SQL queries:

A simple SELECT query including multiple fields from one table.
A query with a JOIN operation involving at least two tables.
A SELECT query with a subquery.
An INSERT query to insert data into a table.
An UPDATE query to update specific records in a table.
A DELETE query to delete specific records from a table.
A query including aggregate functions (e.g., COUNT, SUM, AVG, etc.).
A query with GROUP BY and HAVING clauses.
Please ensure that each query aligns with the provided database schema.

Below is the detailed information of the schema:
</TASK>
